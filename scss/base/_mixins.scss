
// CSS Triangles
@mixin triangle($x, $y, $z, $width, $color) {
    width: 0;
    height: 0;
    border-#{$x}: $width solid transparent;
    border-#{$y}: $width solid transparent;
    border-#{$z}: $width solid $color;
}
/*
* Up: left, right, bottom
* Right: top, bottom, left
* Down: left, right, top
* Left: top, bottom, right
 */


 // CSS Half-triangles
 @mixin halftri($x, $y, $width, $color) {
     width: 0;
     height: 0;
     border-#{$x}: $width solid $color;
     border-#{$y}: $width solid transparent;
 }
 /*
* top-left: top, right
* top-right: top, left
* bottom-left: bottom, right
* bottom-right: bottom, left
 */


 // Gradient OVERLAY
 @mixin gradientOverlay($color, $op) {

background: rgba($color, 0);
background: -moz-linear-gradient(top, rgba($color, 0) 0%, rgba($color, $op) 41%, rgba(26,26,26,1) 100%);
background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba($color, 0)), color-stop(41%, rgba($color, $op)), color-stop(100%, rgba(26,26,26,1)));
background: -webkit-linear-gradient(top, rgba($color, 0) 0%, rgba($color, $op) 41%, rgba(26,26,26,1) 100%);
background: -o-linear-gradient(top, rgba($color, 0) 0%, rgba($color, $op) 41%, rgba(26,26,26,1) 100%);
background: -ms-linear-gradient(top, rgba($color, 0) 0%, rgba($color, $op) 41%, rgba(26,26,26,1) 100%);
background: linear-gradient(to bottom, rgba($color, 0) 0%, rgba($color, $op) 41%, rgba(26,26,26,1) 100%);

 }

 // Reverse Gradient OVERLAY
 @mixin reverseGradientOverlay($color, $op) {
     background: $color;
     background: -moz-linear-gradient(top, rgba($color, $op) 0%, rgba($color, 0) 100%); // FF3.6+
     background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba($color, 0.7)), color-stop(100%,rgba($color, 0))); // Chrome,Safari4+
     background: -webkit-linear-gradient(top, rgba($color, $op) 0%,rgba($color, 0) 100%); // Chrome10+,Safari5.1+
     background: -o-linear-gradient(top, rgba($color, $op) 0%,rgba($color, 0) 100%); // Opera 11.10+
     background: -ms-linear-gradient(top, rgba($color, $op) 0%,rgba($color, 0) 100%); // IE10+
     background: linear-gradient(to bottom, rgba($color, $op) 0%,rgba($color, 0) 100%); // W3C
 }


 // Gradient Overlay Horizontally
@mixin gradientOverlayHoriz {
    background: rgba(0,0,0,0.75);
    background: -moz-linear-gradient(left, rgba(0,0,0,0.75) 0%, rgba(0,0,0,0.69) 25%, rgba(0,0,0,0.5) 100%);
    background: -webkit-gradient(left top, right top, color-stop(0%, rgba(0,0,0,0.75)), color-stop(25%, rgba(0,0,0,0.69)), color-stop(100%, rgba(0,0,0,0.5)));
    background: -webkit-linear-gradient(left, rgba(0,0,0,0.75) 0%, rgba(0,0,0,0.69) 25%, rgba(0,0,0,0.5) 100%);
    background: -o-linear-gradient(left, rgba(0,0,0,0.75) 0%, rgba(0,0,0,0.69) 25%, rgba(0,0,0,0.5) 100%);
    background: -ms-linear-gradient(left, rgba(0,0,0,0.75) 0%, rgba(0,0,0,0.69) 25%, rgba(0,0,0,0.5) 100%);
    background: linear-gradient(to right, rgba(0,0,0,0.75) 0%, rgba(0,0,0,0.69) 25%, rgba(0,0,0,0.5) 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#000000', endColorstr='#000000', GradientType=1 );
}


// Cross-browser opacity
 @mixin opacity($opacity) {
   opacity: $opacity;
   $opacity-ie: $opacity * 100;
   filter: alpha(opacity=$opacity-ie); //IE8
 }


// clearfix
%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin cfx {
    *zoom: 1;
    &:before, &:after {
      content: " ";
      display: table;
    }
    &:after {
      clear: both;
    }
}
// END - clearfix


// MATERIAL SHADOW - BEGIN
// Based on the $depth parameter
@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}


@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}

@mixin material-bottom-shadow($depth) {

    @if $depth < 1 {
        box-shadow: none;
    } @else if $depth > 5 {
        @warn "too deep!";
    } @else {
        box-shadow: bottom-shadow($depth);
    }
}

@mixin material-top-shadow($depth) {
    @if $depth < 1 {
        box-shadow: none;
    } @else if $depth > 5 {
        @warn "too deep!";
    } @else {
        box-shadow: top-shadow($depth);
    }
}


@mixin material-card($depth) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 5 {
    @warn "too deep!";
  } @else {
    box-shadow: bottom-shadow($depth), top-shadow($depth);
  }
}
// END - MATERIAL SHADOW



// Ellipsis at the end of lines and paragraphs
@mixin ellips {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}


// Cross-browser transition
@mixin _transition($args...) {
    -webkit-transition: $args;
	   -moz-transition: $args;
		 -o-transition: $args;
		    transition: $args;
}


// Cross-browser blur filter
@mixin blurred($px) {
    filter: blur($px);
    -webkit-filter: blur($px);
       -moz-filter: blur($px);
         -o-filter: blur($px);
        -ms-filter: blur($px);
}
